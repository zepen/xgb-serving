// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apis/estimate.proto

#include "apis/estimate.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace estimate {
namespace server {
PROTOBUF_CONSTEXPR UserFeatures_FeaturesEntry_DoNotUse::UserFeatures_FeaturesEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct UserFeatures_FeaturesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserFeatures_FeaturesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserFeatures_FeaturesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    UserFeatures_FeaturesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserFeatures_FeaturesEntry_DoNotUseDefaultTypeInternal _UserFeatures_FeaturesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR UserFeatures::UserFeatures(
    ::_pbi::ConstantInitialized)
  : features_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , userid_(uint64_t{0u}){}
struct UserFeaturesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserFeaturesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserFeaturesDefaultTypeInternal() {}
  union {
    UserFeatures _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserFeaturesDefaultTypeInternal _UserFeatures_default_instance_;
PROTOBUF_CONSTEXPR NoteFeatures_FeaturesEntry_DoNotUse::NoteFeatures_FeaturesEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct NoteFeatures_FeaturesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteFeatures_FeaturesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteFeatures_FeaturesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    NoteFeatures_FeaturesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteFeatures_FeaturesEntry_DoNotUseDefaultTypeInternal _NoteFeatures_FeaturesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR NoteFeatures::NoteFeatures(
    ::_pbi::ConstantInitialized)
  : features_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{})
  , noteid_(uint64_t{0u}){}
struct NoteFeaturesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NoteFeaturesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~NoteFeaturesDefaultTypeInternal() {}
  union {
    NoteFeatures _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NoteFeaturesDefaultTypeInternal _NoteFeatures_default_instance_;
PROTOBUF_CONSTEXPR EstimateRequest::EstimateRequest(
    ::_pbi::ConstantInitialized)
  : nf_()
  , uf_(nullptr){}
struct EstimateRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EstimateRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EstimateRequestDefaultTypeInternal() {}
  union {
    EstimateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EstimateRequestDefaultTypeInternal _EstimateRequest_default_instance_;
PROTOBUF_CONSTEXPR EstimateResponse_OutputsEntry_DoNotUse::EstimateResponse_OutputsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct EstimateResponse_OutputsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EstimateResponse_OutputsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EstimateResponse_OutputsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    EstimateResponse_OutputsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EstimateResponse_OutputsEntry_DoNotUseDefaultTypeInternal _EstimateResponse_OutputsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR EstimateResponse::EstimateResponse(
    ::_pbi::ConstantInitialized)
  : outputs_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct EstimateResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EstimateResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EstimateResponseDefaultTypeInternal() {}
  union {
    EstimateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EstimateResponseDefaultTypeInternal _EstimateResponse_default_instance_;
}  // namespace server
}  // namespace estimate
static ::_pb::Metadata file_level_metadata_apis_2festimate_2eproto[7];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_apis_2festimate_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_apis_2festimate_2eproto = nullptr;

const uint32_t TableStruct_apis_2festimate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::estimate::server::UserFeatures_FeaturesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::UserFeatures_FeaturesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::estimate::server::UserFeatures_FeaturesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::UserFeatures_FeaturesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::estimate::server::UserFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::estimate::server::UserFeatures, userid_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::UserFeatures, features_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::NoteFeatures_FeaturesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::NoteFeatures_FeaturesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::estimate::server::NoteFeatures_FeaturesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::NoteFeatures_FeaturesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::estimate::server::NoteFeatures, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::estimate::server::NoteFeatures, noteid_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::NoteFeatures, features_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::estimate::server::EstimateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::estimate::server::EstimateRequest, uf_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::EstimateRequest, nf_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::EstimateResponse_OutputsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::EstimateResponse_OutputsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::estimate::server::EstimateResponse_OutputsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::estimate::server::EstimateResponse_OutputsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::estimate::server::EstimateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::estimate::server::EstimateResponse, outputs_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, -1, sizeof(::estimate::server::UserFeatures_FeaturesEntry_DoNotUse)},
  { 10, -1, -1, sizeof(::estimate::server::UserFeatures)},
  { 18, 26, -1, sizeof(::estimate::server::NoteFeatures_FeaturesEntry_DoNotUse)},
  { 28, -1, -1, sizeof(::estimate::server::NoteFeatures)},
  { 36, -1, -1, sizeof(::estimate::server::EstimateRequest)},
  { 44, 52, -1, sizeof(::estimate::server::EstimateResponse_OutputsEntry_DoNotUse)},
  { 54, -1, -1, sizeof(::estimate::server::EstimateResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::estimate::server::_UserFeatures_FeaturesEntry_DoNotUse_default_instance_._instance,
  &::estimate::server::_UserFeatures_default_instance_._instance,
  &::estimate::server::_NoteFeatures_FeaturesEntry_DoNotUse_default_instance_._instance,
  &::estimate::server::_NoteFeatures_default_instance_._instance,
  &::estimate::server::_EstimateRequest_default_instance_._instance,
  &::estimate::server::_EstimateResponse_OutputsEntry_DoNotUse_default_instance_._instance,
  &::estimate::server::_EstimateResponse_default_instance_._instance,
};

const char descriptor_table_protodef_apis_2festimate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023apis/estimate.proto\022\017estimate.server\"\216"
  "\001\n\014UserFeatures\022\016\n\006userId\030\001 \001(\004\022=\n\010featu"
  "res\030\002 \003(\0132+.estimate.server.UserFeatures"
  ".FeaturesEntry\032/\n\rFeaturesEntry\022\013\n\003key\030\001"
  " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\216\001\n\014NoteFeatures"
  "\022\016\n\006noteId\030\001 \001(\004\022=\n\010features\030\002 \003(\0132+.est"
  "imate.server.NoteFeatures.FeaturesEntry\032"
  "/\n\rFeaturesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
  " \001(\t:\0028\001\"g\n\017EstimateRequest\022)\n\002uf\030\001 \001(\0132"
  "\035.estimate.server.UserFeatures\022)\n\002nf\030\002 \003"
  "(\0132\035.estimate.server.NoteFeatures\"\203\001\n\020Es"
  "timateResponse\022\?\n\007outputs\030\001 \003(\0132..estima"
  "te.server.EstimateResponse.OutputsEntry\032"
  ".\n\014OutputsEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 "
  "\001(\002:\0028\0012a\n\tEstimator\022T\n\rEstimatorResp\022 ."
  "estimate.server.EstimateRequest\032!.estima"
  "te.server.EstimateResponseB\003\370\001\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_apis_2festimate_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_apis_2festimate_2eproto = {
    false, false, 679, descriptor_table_protodef_apis_2festimate_2eproto,
    "apis/estimate.proto",
    &descriptor_table_apis_2festimate_2eproto_once, nullptr, 0, 7,
    schemas, file_default_instances, TableStruct_apis_2festimate_2eproto::offsets,
    file_level_metadata_apis_2festimate_2eproto, file_level_enum_descriptors_apis_2festimate_2eproto,
    file_level_service_descriptors_apis_2festimate_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_apis_2festimate_2eproto_getter() {
  return &descriptor_table_apis_2festimate_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_apis_2festimate_2eproto(&descriptor_table_apis_2festimate_2eproto);
namespace estimate {
namespace server {

// ===================================================================

UserFeatures_FeaturesEntry_DoNotUse::UserFeatures_FeaturesEntry_DoNotUse() {}
UserFeatures_FeaturesEntry_DoNotUse::UserFeatures_FeaturesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void UserFeatures_FeaturesEntry_DoNotUse::MergeFrom(const UserFeatures_FeaturesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata UserFeatures_FeaturesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apis_2festimate_2eproto_getter, &descriptor_table_apis_2festimate_2eproto_once,
      file_level_metadata_apis_2festimate_2eproto[0]);
}

// ===================================================================

class UserFeatures::_Internal {
 public:
};

UserFeatures::UserFeatures(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  features_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &UserFeatures::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:estimate.server.UserFeatures)
}
UserFeatures::UserFeatures(const UserFeatures& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  features_.MergeFrom(from.features_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:estimate.server.UserFeatures)
}

inline void UserFeatures::SharedCtor() {
userid_ = uint64_t{0u};
}

UserFeatures::~UserFeatures() {
  // @@protoc_insertion_point(destructor:estimate.server.UserFeatures)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void UserFeatures::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  features_.Destruct();
}

void UserFeatures::ArenaDtor(void* object) {
  UserFeatures* _this = reinterpret_cast< UserFeatures* >(object);
  _this->features_.Destruct();
}
void UserFeatures::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void UserFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:estimate.server.UserFeatures)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  userid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserFeatures::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 userId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> features = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&features_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserFeatures::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:estimate.server.UserFeatures)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 userId = 1;
  if (this->_internal_userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_userid(), target);
  }

  // map<string, string> features = 2;
  if (!this->_internal_features().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = UserFeatures_FeaturesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_features();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "estimate.server.UserFeatures.FeaturesEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "estimate.server.UserFeatures.FeaturesEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:estimate.server.UserFeatures)
  return target;
}

size_t UserFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:estimate.server.UserFeatures)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> features = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_features_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_features().begin();
      it != this->_internal_features().end(); ++it) {
    total_size += UserFeatures_FeaturesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // uint64 userId = 1;
  if (this->_internal_userid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_userid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserFeatures::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    UserFeatures::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserFeatures::GetClassData() const { return &_class_data_; }

void UserFeatures::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<UserFeatures *>(to)->MergeFrom(
      static_cast<const UserFeatures &>(from));
}


void UserFeatures::MergeFrom(const UserFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:estimate.server.UserFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (from._internal_userid() != 0) {
    _internal_set_userid(from._internal_userid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserFeatures::CopyFrom(const UserFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:estimate.server.UserFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserFeatures::IsInitialized() const {
  return true;
}

void UserFeatures::InternalSwap(UserFeatures* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  features_.InternalSwap(&other->features_);
  swap(userid_, other->userid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserFeatures::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apis_2festimate_2eproto_getter, &descriptor_table_apis_2festimate_2eproto_once,
      file_level_metadata_apis_2festimate_2eproto[1]);
}

// ===================================================================

NoteFeatures_FeaturesEntry_DoNotUse::NoteFeatures_FeaturesEntry_DoNotUse() {}
NoteFeatures_FeaturesEntry_DoNotUse::NoteFeatures_FeaturesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void NoteFeatures_FeaturesEntry_DoNotUse::MergeFrom(const NoteFeatures_FeaturesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata NoteFeatures_FeaturesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apis_2festimate_2eproto_getter, &descriptor_table_apis_2festimate_2eproto_once,
      file_level_metadata_apis_2festimate_2eproto[2]);
}

// ===================================================================

class NoteFeatures::_Internal {
 public:
};

NoteFeatures::NoteFeatures(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  features_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &NoteFeatures::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:estimate.server.NoteFeatures)
}
NoteFeatures::NoteFeatures(const NoteFeatures& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  features_.MergeFrom(from.features_);
  noteid_ = from.noteid_;
  // @@protoc_insertion_point(copy_constructor:estimate.server.NoteFeatures)
}

inline void NoteFeatures::SharedCtor() {
noteid_ = uint64_t{0u};
}

NoteFeatures::~NoteFeatures() {
  // @@protoc_insertion_point(destructor:estimate.server.NoteFeatures)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void NoteFeatures::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  features_.Destruct();
}

void NoteFeatures::ArenaDtor(void* object) {
  NoteFeatures* _this = reinterpret_cast< NoteFeatures* >(object);
  _this->features_.Destruct();
}
void NoteFeatures::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void NoteFeatures::Clear() {
// @@protoc_insertion_point(message_clear_start:estimate.server.NoteFeatures)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  features_.Clear();
  noteid_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NoteFeatures::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 noteId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          noteid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> features = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&features_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* NoteFeatures::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:estimate.server.NoteFeatures)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 noteId = 1;
  if (this->_internal_noteid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_noteid(), target);
  }

  // map<string, string> features = 2;
  if (!this->_internal_features().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = NoteFeatures_FeaturesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_features();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "estimate.server.NoteFeatures.FeaturesEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "estimate.server.NoteFeatures.FeaturesEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(2, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:estimate.server.NoteFeatures)
  return target;
}

size_t NoteFeatures::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:estimate.server.NoteFeatures)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> features = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_features_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_features().begin();
      it != this->_internal_features().end(); ++it) {
    total_size += NoteFeatures_FeaturesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // uint64 noteId = 1;
  if (this->_internal_noteid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_noteid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData NoteFeatures::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    NoteFeatures::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*NoteFeatures::GetClassData() const { return &_class_data_; }

void NoteFeatures::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<NoteFeatures *>(to)->MergeFrom(
      static_cast<const NoteFeatures &>(from));
}


void NoteFeatures::MergeFrom(const NoteFeatures& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:estimate.server.NoteFeatures)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  features_.MergeFrom(from.features_);
  if (from._internal_noteid() != 0) {
    _internal_set_noteid(from._internal_noteid());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void NoteFeatures::CopyFrom(const NoteFeatures& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:estimate.server.NoteFeatures)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NoteFeatures::IsInitialized() const {
  return true;
}

void NoteFeatures::InternalSwap(NoteFeatures* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  features_.InternalSwap(&other->features_);
  swap(noteid_, other->noteid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NoteFeatures::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apis_2festimate_2eproto_getter, &descriptor_table_apis_2festimate_2eproto_once,
      file_level_metadata_apis_2festimate_2eproto[3]);
}

// ===================================================================

class EstimateRequest::_Internal {
 public:
  static const ::estimate::server::UserFeatures& uf(const EstimateRequest* msg);
};

const ::estimate::server::UserFeatures&
EstimateRequest::_Internal::uf(const EstimateRequest* msg) {
  return *msg->uf_;
}
EstimateRequest::EstimateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  nf_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:estimate.server.EstimateRequest)
}
EstimateRequest::EstimateRequest(const EstimateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      nf_(from.nf_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_uf()) {
    uf_ = new ::estimate::server::UserFeatures(*from.uf_);
  } else {
    uf_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:estimate.server.EstimateRequest)
}

inline void EstimateRequest::SharedCtor() {
uf_ = nullptr;
}

EstimateRequest::~EstimateRequest() {
  // @@protoc_insertion_point(destructor:estimate.server.EstimateRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void EstimateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete uf_;
}

void EstimateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EstimateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:estimate.server.EstimateRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nf_.Clear();
  if (GetArenaForAllocation() == nullptr && uf_ != nullptr) {
    delete uf_;
  }
  uf_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstimateRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .estimate.server.UserFeatures uf = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_uf(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .estimate.server.NoteFeatures nf = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nf(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EstimateRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:estimate.server.EstimateRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .estimate.server.UserFeatures uf = 1;
  if (this->_internal_has_uf()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::uf(this),
        _Internal::uf(this).GetCachedSize(), target, stream);
  }

  // repeated .estimate.server.NoteFeatures nf = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nf_size()); i < n; i++) {
    const auto& repfield = this->_internal_nf(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:estimate.server.EstimateRequest)
  return target;
}

size_t EstimateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:estimate.server.EstimateRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .estimate.server.NoteFeatures nf = 2;
  total_size += 1UL * this->_internal_nf_size();
  for (const auto& msg : this->nf_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .estimate.server.UserFeatures uf = 1;
  if (this->_internal_has_uf()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *uf_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EstimateRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EstimateRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EstimateRequest::GetClassData() const { return &_class_data_; }

void EstimateRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EstimateRequest *>(to)->MergeFrom(
      static_cast<const EstimateRequest &>(from));
}


void EstimateRequest::MergeFrom(const EstimateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:estimate.server.EstimateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  nf_.MergeFrom(from.nf_);
  if (from._internal_has_uf()) {
    _internal_mutable_uf()->::estimate::server::UserFeatures::MergeFrom(from._internal_uf());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EstimateRequest::CopyFrom(const EstimateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:estimate.server.EstimateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstimateRequest::IsInitialized() const {
  return true;
}

void EstimateRequest::InternalSwap(EstimateRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  nf_.InternalSwap(&other->nf_);
  swap(uf_, other->uf_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EstimateRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apis_2festimate_2eproto_getter, &descriptor_table_apis_2festimate_2eproto_once,
      file_level_metadata_apis_2festimate_2eproto[4]);
}

// ===================================================================

EstimateResponse_OutputsEntry_DoNotUse::EstimateResponse_OutputsEntry_DoNotUse() {}
EstimateResponse_OutputsEntry_DoNotUse::EstimateResponse_OutputsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void EstimateResponse_OutputsEntry_DoNotUse::MergeFrom(const EstimateResponse_OutputsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata EstimateResponse_OutputsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apis_2festimate_2eproto_getter, &descriptor_table_apis_2festimate_2eproto_once,
      file_level_metadata_apis_2festimate_2eproto[5]);
}

// ===================================================================

class EstimateResponse::_Internal {
 public:
};

EstimateResponse::EstimateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  outputs_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &EstimateResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:estimate.server.EstimateResponse)
}
EstimateResponse::EstimateResponse(const EstimateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  outputs_.MergeFrom(from.outputs_);
  // @@protoc_insertion_point(copy_constructor:estimate.server.EstimateResponse)
}

inline void EstimateResponse::SharedCtor() {
}

EstimateResponse::~EstimateResponse() {
  // @@protoc_insertion_point(destructor:estimate.server.EstimateResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void EstimateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  outputs_.Destruct();
}

void EstimateResponse::ArenaDtor(void* object) {
  EstimateResponse* _this = reinterpret_cast< EstimateResponse* >(object);
  _this->outputs_.Destruct();
}
void EstimateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void EstimateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:estimate.server.EstimateResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputs_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EstimateResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<uint64, float> outputs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&outputs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* EstimateResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:estimate.server.EstimateResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<uint64, float> outputs = 1;
  if (!this->_internal_outputs().empty()) {
    using MapType = ::_pb::Map<uint64_t, float>;
    using WireHelper = EstimateResponse_OutputsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_outputs();

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterFlat<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:estimate.server.EstimateResponse)
  return target;
}

size_t EstimateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:estimate.server.EstimateResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<uint64, float> outputs = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_outputs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< uint64_t, float >::const_iterator
      it = this->_internal_outputs().begin();
      it != this->_internal_outputs().end(); ++it) {
    total_size += EstimateResponse_OutputsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData EstimateResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    EstimateResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*EstimateResponse::GetClassData() const { return &_class_data_; }

void EstimateResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<EstimateResponse *>(to)->MergeFrom(
      static_cast<const EstimateResponse &>(from));
}


void EstimateResponse::MergeFrom(const EstimateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:estimate.server.EstimateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  outputs_.MergeFrom(from.outputs_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void EstimateResponse::CopyFrom(const EstimateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:estimate.server.EstimateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EstimateResponse::IsInitialized() const {
  return true;
}

void EstimateResponse::InternalSwap(EstimateResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  outputs_.InternalSwap(&other->outputs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EstimateResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_apis_2festimate_2eproto_getter, &descriptor_table_apis_2festimate_2eproto_once,
      file_level_metadata_apis_2festimate_2eproto[6]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace server
}  // namespace estimate
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::estimate::server::UserFeatures_FeaturesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::estimate::server::UserFeatures_FeaturesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::estimate::server::UserFeatures_FeaturesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::estimate::server::UserFeatures*
Arena::CreateMaybeMessage< ::estimate::server::UserFeatures >(Arena* arena) {
  return Arena::CreateMessageInternal< ::estimate::server::UserFeatures >(arena);
}
template<> PROTOBUF_NOINLINE ::estimate::server::NoteFeatures_FeaturesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::estimate::server::NoteFeatures_FeaturesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::estimate::server::NoteFeatures_FeaturesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::estimate::server::NoteFeatures*
Arena::CreateMaybeMessage< ::estimate::server::NoteFeatures >(Arena* arena) {
  return Arena::CreateMessageInternal< ::estimate::server::NoteFeatures >(arena);
}
template<> PROTOBUF_NOINLINE ::estimate::server::EstimateRequest*
Arena::CreateMaybeMessage< ::estimate::server::EstimateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::estimate::server::EstimateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::estimate::server::EstimateResponse_OutputsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::estimate::server::EstimateResponse_OutputsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::estimate::server::EstimateResponse_OutputsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::estimate::server::EstimateResponse*
Arena::CreateMaybeMessage< ::estimate::server::EstimateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::estimate::server::EstimateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
